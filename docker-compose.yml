version: "3.8"

services:
  app-prod:
    build:
      context: .
      dockerfile: Dockerfile
      target: production
    environment:
      - GO_ENV=production
      - MONGODB_URI=mongodb://${MONGODB_PROD_USER}:${MONGODB_PROD_PASSWORD}@mongodb-prod:27017/myapp_prod?authSource=myapp_prod
      - MONGODB_DATABASE=myapp_prod
    ports:
      - "8096:8096"
    depends_on:
      mongodb-prod:
        condition: service_healthy
    networks:
      - app-network-prod
    deploy:
      restart_policy:
        condition: on-failure
        max_attempts: 3
    logging:
      driver: "json-file"
      options:
        max-size: "50m"
        max-file: "10"

  mongodb-prod:
    image: mongo:6
    command: mongod --auth --quiet
    environment:
      - MONGO_INITDB_ROOT_USERNAME=${MONGODB_PROD_ROOT_USER:-admin}
      - MONGO_INITDB_ROOT_PASSWORD=${MONGODB_PROD_ROOT_PASSWORD}
      - MONGO_INITDB_DATABASE=myapp_prod
      - MONGODB_USER=${MONGODB_PROD_USER}
      - MONGODB_PASSWORD=${MONGODB_PROD_PASSWORD}
    volumes:
      - mongodb-data-prod:/data/db
      - ${PWD}/init-scripts-prod:/docker-entrypoint-initdb.d:Z
    networks:
      - app-network-prod
    healthcheck:
      test:
        [
          "CMD",
          "mongosh",
          "admin",
          "-u",
          "${MONGODB_PROD_ROOT_USER:-admin}",
          "-p",
          "${MONGODB_PROD_ROOT_PASSWORD}",
          "--eval",
          "db.adminCommand('ping')",
        ]
      interval: 10s
      timeout: 5s
      retries: 5
    deploy:
      resources:
        limits:
          cpus: "2"
          memory: 4G
    ulimits:
      nproc: 64000
      nofile:
        soft: 64000
        hard: 64000

volumes:
  mongodb-data-prod:

networks:
  app-network-prod:
    driver: bridge
